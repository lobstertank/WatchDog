import urllib.request
import urllib.parse
import json
import io
import sys
import datetime
import os
from forecast import forecast
from config import TELEGRAM_CONFIG
from holiday_checker_json import is_working_day, get_holiday_info

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ config.py
BOT_TOKEN = TELEGRAM_CONFIG['bot_token']
ALLOWED_USERS = TELEGRAM_CONFIG['allowed_users']


def send_telegram_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    
    data = {
        'chat_id': chat_id,
        'text': text,
        'parse_mode': 'HTML'
    }
    
    data = urllib.parse.urlencode(data).encode('utf-8')
    
    try:
        with urllib.request.urlopen(url, data) as response:
            result = json.loads(response.read().decode('utf-8'))
            return result.get('ok', False)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False

def send_negative_balance_report():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—á–µ—Ç –æ–± –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –æ—Å—Ç–∞—Ç–∫–∞—Ö –≤ —Ç–∞–±–ª–∏—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
    
    # –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Å—Ç—Ä–æ–∫—É
    old_stdout = sys.stdout
    sys.stdout = buffer = io.StringIO()
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
        forecast()
        report = buffer.getvalue()
    finally:
        sys.stdout = old_stdout
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –≤ —Ç–∞–±–ª–∏—á–Ω–æ–º –≤–∏–¥–µ
    if "–ú–∏–Ω—É—Å–æ–≤ –Ω–µ—Ç" in report:
        message = "‚úÖ <b>–ê–Ω–∞–ª–∏–∑ –æ—Å—Ç–∞—Ç–∫–æ–≤</b>\n\nüéâ <b>–ú–∏–Ω—É—Å–æ–≤ –Ω–µ—Ç!</b>\n\n–í—Å–µ —Å—á–µ—Ç–∞ –≤ –ø–æ—Ä—è–¥–∫–µ."
    else:
        # –ü–∞—Ä—Å–∏–º –æ—Ç—á–µ—Ç –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É
        lines = report.strip().split('\n')
        message = "‚ö†Ô∏è <b>–ê–Ω–∞–ª–∏–∑ –æ—Å—Ç–∞—Ç–∫–æ–≤</b>\n\n"
        message += "üî¥ <b>–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏:</b>\n\n"
        
        for line in lines:
            if ":" in line and "–º–∏–Ω—É—Å—ã –≤ –º–µ—Å—è—Ü–∞—Ö" in line:
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É: "–°—á–µ—Ç: –º–∏–Ω—É—Å—ã –≤ –º–µ—Å—è—Ü–∞—Ö: 09-2025, 10-2025"
                parts = line.split(": –º–∏–Ω—É—Å—ã –≤ –º–µ—Å—è—Ü–∞—Ö: ")
                if len(parts) == 2:
                    account_name = parts[0].strip()
                    months = parts[1].strip()
                    
                    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—á–Ω—É—é —Å—Ç—Ä–æ–∫—É
                    message += f"üìä <b>{account_name}</b>\n"
                    message += f"üìÖ –ú–µ—Å—è—Ü—ã: <code>{months}</code>\n\n"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –≤—Å–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    for user_id in ALLOWED_USERS:
        try:
            success = send_telegram_message(user_id, message)
            if success:
                print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            else:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

def send_positive_balance_report():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –º–∏–Ω—É—Å–æ–≤ –Ω–µ—Ç (—Ç–æ–ª—å–∫–æ –≤ 9 —É—Ç—Ä–∞)"""
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º UTC+3 –¥–ª—è –ú–æ—Å–∫–≤—ã (–±–µ–∑ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –ª–µ—Ç–Ω–µ–µ –≤—Ä–µ–º—è)
    current_time_utc = datetime.datetime.utcnow()
    moscow_time = current_time_utc + datetime.timedelta(hours=3)
    
    message = f"üåÖ <b>–£—Ç—Ä–µ–Ω–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤</b>\n\n"
    message += f"‚è∞ –í—Ä–µ–º—è: {moscow_time.strftime('%H:%M')} –ú–°–ö\n\n"
    message += "‚úÖ <b>–í—Å–µ —Å—á–µ—Ç–∞ –≤ –ø–æ—Ä—è–¥–∫–µ!</b>\n\n"
    message += "üéâ <b>–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ</b>\n\n"
    message += "üìä –ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –≤—Å–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    for user_id in ALLOWED_USERS:
        try:
            success = send_telegram_message(user_id, message)
            if success:
                print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Ç—Ä–µ–Ω–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            else:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

def check_and_notify():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –º–∏–Ω—É—Å–æ–≤ –∏ –≤ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—á–∏–π –ª–∏ —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å
    today = datetime.date.today()
    if not is_working_day(today):
        holiday_info = get_holiday_info(today)
        if holiday_info:
            print(f"üìÖ –°–µ–≥–æ–¥–Ω—è {holiday_info} - –≤—ã—Ö–æ–¥–Ω–æ–π, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º")
        else:
            print(f"üìÖ –°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º")
        return
    
    print(f"üìÖ –°–µ–≥–æ–¥–Ω—è —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å - –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞—Ç–∫–∏")
    
    # –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Å—Ç—Ä–æ–∫—É
    old_stdout = sys.stdout
    sys.stdout = buffer = io.StringIO()
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑
        forecast()
        report = buffer.getvalue()
    finally:
        sys.stdout = old_stdout
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–∏–Ω—É—Å—ã
    if "–ú–∏–Ω—É—Å–æ–≤ –Ω–µ—Ç" not in report:
        # –ï—Å—Ç—å –º–∏–Ω—É—Å—ã - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        send_negative_balance_report()
        print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –º–∏–Ω—É—Å–∞—Ö")
    else:
        # –ú–∏–Ω—É—Å–æ–≤ –Ω–µ—Ç - –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è (—Ç–æ–ª—å–∫–æ —É—Ç—Ä–æ–º –≤ 9:00 –ø–æ –ú–æ—Å–∫–≤–µ)
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º UTC+3 –¥–ª—è –ú–æ—Å–∫–≤—ã (–±–µ–∑ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –ª–µ—Ç–Ω–µ–µ –≤—Ä–µ–º—è)
        current_time_utc = datetime.datetime.utcnow()
        moscow_time = current_time_utc + datetime.timedelta(hours=3)
        
        if moscow_time.hour == 9 and moscow_time.minute < 10:  # –¢–æ–ª—å–∫–æ –≤ 9 —É—Ç—Ä–∞ (—Å –∑–∞–ø–∞—Å–æ–º –Ω–∞ 10 –º–∏–Ω—É—Ç)
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "–≤—Å–µ —Ö–æ—Ä–æ—à–æ" –≤ 9 —É—Ç—Ä–∞
            send_positive_balance_report()
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –º–∏–Ω—É—Å–æ–≤ –Ω–µ—Ç (9 —É—Ç—Ä–∞ –ø–æ –ú–æ—Å–∫–≤–µ)")
        else:
            print(f"–ú–∏–Ω—É—Å–æ–≤ –Ω–µ—Ç - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–≤—Ä–µ–º—è: {moscow_time.strftime('%H:%M')} –ú–°–ö)")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤...")
    check_and_notify()

if __name__ == "__main__":
    main()
