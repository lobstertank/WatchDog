#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –§–∏–Ω–æ–ª–æ–≥–∞
"""

import datetime
import os
from holiday_checker_json import is_working_day, get_holiday_info
from api_functions import (
    get_all_accounts,
    get_all_transactions_for_all_accounts, 
    calculate_daily_balances,
    get_current_balances,
    analyze_all_accounts_balances
)
from telegram_functions import (
    send_telegram_message,
    send_telegram_message_wrapper,
    send_positive_balance_report,
    send_balance_analysis_report
)


def check_and_notify(bot_token, allowed_users, is_test=False):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø—Ä–æ–±–ª–µ–º –∏ –≤ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—á–∏–π –ª–∏ —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å
    today = datetime.date.today()
    if not is_working_day(today):
        holiday_info = get_holiday_info(today)
        if holiday_info:
            print(f"üìÖ –°–µ–≥–æ–¥–Ω—è {holiday_info} - –≤—ã—Ö–æ–¥–Ω–æ–π, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º")
        else:
            print(f"üìÖ –°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º")
        return
    
    print(f"üìÖ –°–µ–≥–æ–¥–Ω—è —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å - –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞—Ç–∫–∏")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö —Å—á–µ—Ç–æ–≤ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
    accounts = get_all_accounts()
    account_ids = [account.get('id') for account in accounts]
    
    print(f"üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞–Ω–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö —Å—á–µ—Ç–æ–≤ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º... {account_ids}")

    start_date = datetime.datetime.now().strftime("%Y-%m-%d")
    transactions_by_account = get_all_transactions_for_all_accounts(account_ids, start_date)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏
    current_balances = get_current_balances(accounts)
    
    # –ï–¥–∏–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Å—á–µ—Ç–æ–≤
    analysis_result = analyze_all_accounts_balances(transactions_by_account, accounts, current_balances)
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–¥–∏–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    send_balance_analysis_report(analysis_result, 
                                lambda chat_id, text: send_telegram_message_wrapper(bot_token, chat_id, text, is_test), 
                                allowed_users)

def main(bot_token, allowed_users, is_test=False):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    bot_type = "–¢–ï–°–¢–û–í–û–ì–û" if is_test else "–û–°–ù–û–í–ù–û–ì–û"
    print(f"üöÄ –ó–∞–ø—É—Å–∫ {bot_type} –±–æ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤...")
    check_and_notify(bot_token, allowed_users, is_test)