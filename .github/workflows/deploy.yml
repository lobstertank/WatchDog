name: "Deploy to Production"

on:
  workflow_dispatch:  # Manual trigger
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      
    - name: Create .env file
      run: |
        echo "FINOLOG_API_KEY=${{ secrets.FINOLOG_API_KEY }}" > .env
        echo "FINOLOG_BIZ_ID=${{ secrets.FINOLOG_BIZ_ID }}" >> .env
        echo "THREATENING_ACCOUNT_IDS=${{ secrets.THREATENING_ACCOUNT_IDS }}" >> .env
        echo "THREATENING_THRESHOLD=${{ secrets.THREATENING_THRESHOLD }}" >> .env
        echo "THREATENING_DAYS_AHEAD=${{ secrets.THREATENING_DAYS_AHEAD }}" >> .env
        echo "MAIN_BOT_TOKEN=${{ secrets.MAIN_BOT_TOKEN }}" >> .env
        echo "MAIN_BOT_ALLOWED_USERS=${{ secrets.MAIN_BOT_ALLOWED_USERS }}" >> .env
        echo "TEST_BOT_TOKEN=${{ secrets.TEST_BOT_TOKEN }}" >> .env
        echo "TEST_BOT_ALLOWED_USERS=${{ secrets.TEST_BOT_ALLOWED_USERS }}" >> .env
        
    - name: Test SSH connection
      run: |
        echo "Testing SSH connection..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'SSH connection successful'"
        
    - name: Stop existing service (optional)
      run: |
        echo "Attempting to stop existing service..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "ps aux | grep launcher.py | grep -v grep || echo 'No launcher.py process running'"
        
    - name: Create logs directory
      run: |
        echo "Creating logs directory..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p ~/watchdog/logs"
        
    - name: Deploy .env file
      run: |
        echo "Deploying .env file..."
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa .env ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/watchdog/
        
    - name: Deploy Python files
      run: |
        echo "Deploying Python files..."
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa *.py ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/watchdog/
        
    - name: Deploy shell scripts
      run: |
        echo "Deploying shell scripts..."
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa *.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/watchdog/
        
    - name: Deploy holiday files
      run: |
        echo "Deploying holiday files..."
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa holidays_*.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/watchdog/
        
    - name: Set execute permissions
      run: |
        echo "Setting execute permissions..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ~/watchdog && chmod +x *.sh"
        
    - name: Update cron jobs
      run: |
        echo "Updating cron jobs..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cat > /tmp/watchdog_cron << 'EOF'
        # WatchDog - мониторинг остатков
        # Основной бот: 9:00-18:00 каждый час (скрипт сам пропускает праздники)
        0 9-18 * * * cd /home/sheinin/watchdog && ./run_bot_with_holidays.sh
        # Обновление праздников: первый понедельник месяца в 14:00
        0 14 1-7 * 1 cd /home/sheinin/watchdog && ./run_holiday_updater.sh
        EOF"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "crontab /tmp/watchdog_cron && rm /tmp/watchdog_cron"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'Cron jobs updated:' && crontab -l"
        
    - name: Restart service
      run: |
        echo "Restarting service..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ~/watchdog && nohup python3 launcher.py > logs/launcher.log 2>&1 &"
        
    - name: Verify deployment - Check files
      run: |
        echo "=== VERIFICATION: Checking deployed files ==="
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ~/watchdog && echo 'Python files:' && ls -la *.py | head -5"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ~/watchdog && echo 'Shell scripts:' && ls -la *.sh"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ~/watchdog && echo 'JSON files:' && ls -la holidays_*.json"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ~/watchdog && echo 'Logs directory:' && ls -la logs/"
        
    - name: Verify deployment - Check cron jobs
      run: |
        echo "=== VERIFICATION: Checking cron jobs ==="
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'Current cron jobs:' && crontab -l"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'Cron service status:' && sudo systemctl is-active cron"
        
    - name: Verify deployment - Test scripts
      run: |
        echo "=== VERIFICATION: Testing scripts ==="
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ~/watchdog && echo 'Testing run_bot_with_holidays.sh:' && timeout 10 ./run_bot_with_holidays.sh || echo 'Script test completed'"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ~/watchdog && echo 'Testing holiday_checker_json.py:' && python3 holiday_checker_json.py"
        
    - name: Verify deployment - Check logs
      run: |
        echo "=== VERIFICATION: Checking logs ==="
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ~/watchdog && echo 'Recent launcher.log:' && tail -5 logs/launcher.log"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ~/watchdog && echo 'Recent bot.log:' && tail -5 logs/bot.log"
        
    - name: Verify deployment - Check processes
      run: |
        echo "=== VERIFICATION: Checking processes ==="
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'Python processes:' && ps aux | grep python3 | grep -v grep || echo 'No Python processes found'"
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'WatchDog processes:' && ps aux | grep -E '(launcher|watchdog)' | grep -v grep || echo 'No WatchDog processes found'"
        
    - name: Deployment verification summary
      run: |
        echo "🎉 === DEPLOYMENT VERIFICATION COMPLETE ==="
        echo "✅ Files deployed successfully"
        echo "✅ Cron jobs updated"
        echo "✅ Scripts tested"
        echo "✅ Logs accessible"
        echo "✅ System operational"
        echo "🚀 WatchDog deployment verified and ready!"