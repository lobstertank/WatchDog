name: "Run Tests"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      FINOLOG_API_KEY: ${{ secrets.FINOLOG_API_KEY || 'test_api_key' }}
      FINOLOG_BIZ_ID: ${{ secrets.FINOLOG_BIZ_ID || 'test_biz_id' }}
      THREATENING_ACCOUNT_IDS: ${{ secrets.THREATENING_ACCOUNT_IDS || '123,456' }}
      THREATENING_THRESHOLD: ${{ secrets.THREATENING_THRESHOLD || '100000' }}
      THREATENING_DAYS_AHEAD: ${{ secrets.THREATENING_DAYS_AHEAD || '356' }}
      MAIN_BOT_TOKEN: ${{ secrets.MAIN_BOT_TOKEN || 'test_main_token' }}
      MAIN_BOT_ALLOWED_USERS: ${{ secrets.MAIN_BOT_ALLOWED_USERS || '123456789' }}
      TEST_BOT_TOKEN: ${{ secrets.TEST_BOT_TOKEN || 'test_test_token' }}
      TEST_BOT_ALLOWED_USERS: ${{ secrets.TEST_BOT_ALLOWED_USERS || '123456789' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests python-telegram-bot
        
    - name: Test imports
      run: |
        python -c "
        try:
            from api_functions import get_all_accounts, get_current_balances
            from telegram_functions import send_telegram_message_wrapper
            from config import FINOLOG_CONFIG, THREATENING_CONFIG
            from contacts import MAIN_BOT_CONFIG, TEST_BOT_CONFIG
            print('All imports successful')
        except Exception as e:
            print(f'Import error: {e}')
            exit(1)
        "
        
    - name: Test configuration
      run: |
        python -c "
        from config import FINOLOG_CONFIG, THREATENING_CONFIG
        from contacts import MAIN_BOT_CONFIG, TEST_BOT_CONFIG
        
        # Check that config values are set
        assert FINOLOG_CONFIG['api_key'], 'FINOLOG_API_KEY is not set'
        assert FINOLOG_CONFIG['biz_id'], 'FINOLOG_BIZ_ID is not set'
        assert THREATENING_CONFIG['account_ids'], 'THREATENING_ACCOUNT_IDS is not set'
        assert MAIN_BOT_CONFIG['bot_token'], 'MAIN_BOT_TOKEN is not set'
        assert MAIN_BOT_CONFIG['allowed_users'], 'MAIN_BOT_ALLOWED_USERS is not set'
        assert TEST_BOT_CONFIG['bot_token'], 'TEST_BOT_TOKEN is not set'
        assert TEST_BOT_CONFIG['allowed_users'], 'TEST_BOT_ALLOWED_USERS is not set'
        
        print('Configuration validation successful')
        "